[[commands]]
name = "build"
command ='''
git add .
scripts/build.sh |& nom
'''
help = "Builds the flake"
category = "Build"

[[commands]]
name = "test-flake"
command ='''
nix flake check |& nom
'''
help = "Tests the flake"
category = "Test"

[[commands]]
name = "test-system"
command ='''
scripts/system-flake-test.sh |& nom
'''
help = "Tests the system configuration"
category = "Test"

[[commands]] 
name = "boot"
command ='''
rebuild-system
nh os boot
'''
help = "Switches boot to the new system configuration"
category = "Build"

[[commands]]
name = "rebuild-system"
command ='''
git add .
scripts/system-flake-rebuild.sh |& nom
check-sops
'''
help = "Rebuilds the system configuration"
category = "Build"

[[commands]]
name = "clean-nix"
command ='''
nh clean all --keep-since 3d --keep 1
'''
help = "Removes all generations before 3 days ago but keeps at least 1. Will remove direnvs"
category = "Utils"

[[commands]]
name = "clean-home"
command = '''
nh clean user --nogcroots --keep 1
'''
help = "Removes non-current home generations. Does not remove direnvs"
category = "Utils"

[[commands]]
name = "build-bootstrap-image"
command = '''
  nom build .#bootstrap-image
'''
help = "Builds bootstrap image for low memory VMs. Contains only root."
category = "Build"

[[commands]]
name = "deploy-bootstrap-image"
command = '''
  build-bootstrap-image
  cat result/main.raw |pv| ssh root@$1 "dd of=/dev/$2"
  ssh root@$1 "reboot"
'''
help = "Builds and deploys the bootstrap image to <$1> on device <$2>"
category = "Build"

[[commands]]
name = "rebuild-system-trace"
command ='''
git add .
scripts/system-flake-rebuild-trace.sh |& nom
check-sops
'''
help = "Rebuilds the system configuration with tracing"
category = "Build"

[[commands]]
name = "update-flake"
command ='''
nix flake update |& nom
'''
help = "Updates the flake"
category = "Update"

[[commands]]
name = "format"
command ='''
alejandra .
'''
help = "Formats the configuration"
category = "Utils"

[[commands]]
name = "update-rebuild"
command ='''
update-flake
rebuild-system
'''
help = "Updates and rebuilds the system configuration"
category = "Update"

[[commands]]
name = "diff-flake"
command ='''
git diff ':!flake.lock'
'''
help = "Shows the changes"
category = "Utils"

[[commands]]
name = "home-switch"
command ='''
nh home switch
check-sops
'''
help = "Switches the home-manager configuration"
category = "Build"

[[commands]]
name = "update-home"
command ='''
update-system
home-switch
'''
help = "Updates and switches the home-manager configuration"
category = "Update"

[[commands]]
name = "sops-init"
command ='''
mkdir -p ~/.config/sops/age
nix-shell -p age --run "age-keygen -o ~/.config/sops/age/keys.txt"
'''
help = "Initializes sops with age"
category = "SOPS"

[[commands]]
name = "age-keys"
command ='''
  nix-shell -p age --run "age-keygen -o ~/.age-key.txt"
'''
help = "Generates a new age key"
category = "SOPS"

[[commands]]
name = "check-sops"
command ='''
scripts/check-sops.sh
'''
help = "Checks the sops configuration"
category = "SOPS"

[[commands]]
name = "update-secrets"
command ='''
  nix flake lock --update-input mysecrets
'''
help = "Updates the secrets for the flake"
category = "Update"


[devshell]
name = "Tsunamis Nix Flake"
motd = '''
  {202}ðŸ”¨ Welcome to Tsunamis Flake{reset}
  Type {202}menu{reset} to view commands.
'''

packages = [
  "age", # sops
  "alejandra", # formatter
  "deadnix", # deadnix
  "direnv", # direnv
  "git", # git
  "home-manager", # home-manager
  "manix", # help docs in terminal
  "nano", # editor
  "nh", # nix-helper
  "nil", # nix-language-server
  "nix-output-monitor", # drop in replacement for nix
  "nvd", # nix diff
  "nix", # nix
  "pre-commit", # pre-commit
  "pv", # pive viewer
  "sops", # sops
  "ssh-to-age", # sops
  "zoxide", # zoxide
]
